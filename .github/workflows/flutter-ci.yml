name: Flutter CI/CD with Security Scanning
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggers
permissions:
  security-events: write
  contents: read
env:
  FLUTTER_VERSION: '3.35.5'
  DART_VERSION: '3.8.1'
  JAVA_VERSION: '17'
jobs:
  
  # -----------------------------
  
  # Semantic Versioning
  
  # -----------------------------
  semantic-versioning:
    name: 📋 Semantic Versioning
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version-type: ${{ steps.version.outputs.version-type }}
      is-release: ${{ steps.version.outputs.is-release }}
      git-tag: ${{ steps.version.outputs.git-tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for version calculation
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install semantic versioning tools
        run: |
          pip install gitpython semver
      - name: Calculate semantic version
        id: version
        run: |
          python3 << 'EOF'
          import os
          import re
          from git import Repo
          import semver
          # Configuration
          repo = Repo('.')
          # ... (content omitted for brevity)
EOF
  
  # ... (rest of YAML omitted for brevity)
  
  # Ensure all heredoc closers are at column 1
  # Example corrections applied below
  
  dast-scan:
    name: 🛡️ OWASP ZAP DAST Scan (Manual)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Create zap-scan.py
        run: |
          cat > zap-scan.py << 'EOF'
          #!/usr/bin/env python3
          # ... (script content)
EOF
      - name: Create parse_zap_results.py
        run: |
          cat > parse_zap_results.py << 'SCRIPT_EOF'
          #!/usr/bin/env python3
          # ... (script content)
SCRIPT_EOF
      - name: Create analyze_zap_details.py
        run: |
          cat > analyze_zap_details.py << 'SCRIPT_EOF'
          #!/usr/bin/env python3
          # ... (script content)
SCRIPT_EOF
      - name: Run ZAP scan
        run: |
          python3 zap-scan.py
          python3 parse_zap_results.py
          python3 analyze_zap_details.py
